{"ast":null,"code":"var _jsxFileName = \"/Users/marquessmalley/Documents/my_code/REACT/redux_todo_app/src/components/Form.js\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  input,\n  setInput,\n  todos,\n  setTodos,\n  editTodo,\n  setEditTodo\n}) => {\n  const updateTodo = (title, id, completed) => {\n    const newTodo = todos.map(todo => {\n      todo.id === id ? {\n        title,\n        id,\n        completed\n      } : todo;\n    });\n  }; // UPDATE INPUT VALUE\n\n\n  const onInputChange = event => {\n    setInput(event.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    //PREVENTS PAGE FROM RELOADING\n    e.preventDefault();\n\n    if (!editTodo) {\n      //  UPDATE TODOS STATE WITH NEW OBJECT\n      setTodos(prevTodos => {\n        return [...prevTodos, {\n          id: uuidv4(),\n          title: input,\n          completed: false\n        }];\n      });\n    } else {\n      updateTodos(input, editTodo.id, editTodo.completed);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your todo..\",\n      value: input,\n      onChange: onInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/marquessmalley/Documents/my_code/REACT/redux_todo_app/src/components/Form.js"],"names":["React","v4","uuidv4","Form","input","setInput","todos","setTodos","editTodo","setEditTodo","updateTodo","title","id","completed","newTodo","map","todo","onInputChange","event","target","value","handleFormSubmit","e","preventDefault","prevTodos","updateTodos"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA,QAApC;AAA8CC,EAAAA;AAA9C,CAAD,KAAiE;AAC5E,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,EAAR,EAAYC,SAAZ,KAA0B;AAC3C,UAAMC,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AAClCA,MAAAA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAiB;AAAED,QAAAA,KAAF;AAASC,QAAAA,EAAT;AAAaC,QAAAA;AAAb,OAAjB,GAA4CG,IAA5C;AACD,KAFe,CAAhB;AAGD,GAJD,CAD4E,CAO5E;;;AACA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/Bb,IAAAA,QAAQ,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B;AACAA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACf,QAAL,EAAe;AACb;AACAD,MAAAA,QAAQ,CAAEiB,SAAD,IAAe;AACtB,eAAO,CAAC,GAAGA,SAAJ,EAAe;AAAEZ,UAAAA,EAAE,EAAEV,MAAM,EAAZ;AAAgBS,UAAAA,KAAK,EAAEP,KAAvB;AAA8BS,UAAAA,SAAS,EAAE;AAAzC,SAAf,CAAP;AACD,OAFO,CAAR;AAGD,KALD,MAKO;AACLY,MAAAA,WAAW,CAACrB,KAAD,EAAQI,QAAQ,CAACI,EAAjB,EAAqBJ,QAAQ,CAACK,SAA9B,CAAX;AACD;AACF,GAZD;;AAaA,sBACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEQ,gBAA1B;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,KAAK,EAAEjB,KAHT;AAIE,MAAA,QAAQ,EAAEa,aAJZ;AAKE,MAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;KAAMd,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Form = ({ input, setInput, todos, setTodos, editTodo, setEditTodo }) => {\n  const updateTodo = (title, id, completed) => {\n    const newTodo = todos.map((todo) => {\n      todo.id === id ? { title, id, completed } : todo;\n    });\n  };\n\n  // UPDATE INPUT VALUE\n  const onInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleFormSubmit = (e) => {\n    //PREVENTS PAGE FROM RELOADING\n    e.preventDefault();\n\n    if (!editTodo) {\n      //  UPDATE TODOS STATE WITH NEW OBJECT\n      setTodos((prevTodos) => {\n        return [...prevTodos, { id: uuidv4(), title: input, completed: false }];\n      });\n    } else {\n      updateTodos(input, editTodo.id, editTodo.completed);\n    }\n  };\n  return (\n    <form action=\"\" onSubmit={handleFormSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your todo..\"\n        value={input}\n        onChange={onInputChange}\n        required\n      />\n      <button>Add</button>\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}